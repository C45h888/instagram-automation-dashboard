#!/bin/bash
# deploy-tunnel-b.sh - Setup script for Tunnel B (Supabase secure tunnel)

set -e

echo "🚇 Setting up Tunnel B for Secure Supabase Access"
echo "================================================="
echo ""

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Load environment variables
if [ -f .env ]; then
    export $(cat .env | grep -v '#' | awk '/=/ {print $1}')
fi

# Function to check command availability
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${RED}❌ $1 is not installed${NC}"
        return 1
    fi
    echo -e "${GREEN}✅ $1 is installed${NC}"
    return 0
}

# Function to extract Supabase project reference
extract_project_ref() {
    echo "$1" | sed -n 's|https://\([^.]*\)\.supabase\.co|\1|p'
}

echo "📋 Step 1: Checking prerequisites..."
echo ""

# Check required commands
check_command "cloudflared" || exit 1
check_command "node" || exit 1
check_command "npm" || exit 1

echo ""
echo "📋 Step 2: Validating environment configuration..."
echo ""

# Check for Tunnel A token
if [ -z "$CLOUDFLARE_TUNNEL_TOKEN" ]; then
    echo -e "${YELLOW}⚠️  CLOUDFLARE_TUNNEL_TOKEN not found (Tunnel A)${NC}"
else
    echo -e "${GREEN}✅ Tunnel A token configured${NC}"
fi

# Check Supabase URL
if [ -z "$SUPABASE_URL" ]; then
    echo -e "${RED}❌ SUPABASE_URL not set in .env${NC}"
    echo "   Please add: SUPABASE_URL=https://your-project-ref.supabase.co"
    exit 1
fi
echo -e "${GREEN}✅ Supabase URL: $SUPABASE_URL${NC}"

# Extract project reference
SUPABASE_PROJECT_REF=$(extract_project_ref "$SUPABASE_URL")
if [ -z "$SUPABASE_PROJECT_REF" ]; then
    echo -e "${RED}❌ Could not extract Supabase project reference${NC}"
    exit 1
fi
echo -e "${GREEN}✅ Project Reference: $SUPABASE_PROJECT_REF${NC}"

echo ""
echo "📋 Step 3: Creating Supabase tunnel..."
echo ""

# Check if tunnel B token exists
if [ -z "$CLOUDFLARE_SUPABASE_TUNNEL_TOKEN" ]; then
    echo -e "${YELLOW}Creating new tunnel 'supabase-secure-tunnel'...${NC}"
    
    # Try to create the tunnel
    if cloudflared tunnel create supabase-secure-tunnel 2>&1 | grep -q "already exists"; then
        echo -e "${GREEN}✅ Tunnel already exists${NC}"
    else
        echo -e "${GREEN}✅ Tunnel created successfully${NC}"
    fi
    
    echo ""
    echo -e "${YELLOW}📌 IMPORTANT: You need to get the tunnel token${NC}"
    echo "1. Go to: https://one.dash.cloudflare.com/"
    echo "2. Navigate to: Zero Trust → Access → Tunnels"
    echo "3. Click on: supabase-secure-tunnel"
    echo "4. Copy the tunnel token"
    echo "5. Add to .env: CLOUDFLARE_SUPABASE_TUNNEL_TOKEN=\"your_token\""
    echo ""
    read -p "Press Enter after adding the token to continue..."
    
    # Reload environment
    export $(cat .env | grep -v '#' | awk '/=/ {print $1}')
    
    if [ -z "$CLOUDFLARE_SUPABASE_TUNNEL_TOKEN" ]; then
        echo -e "${RED}❌ Token still not found in .env${NC}"
        exit 1
    fi
else
    echo -e "${GREEN}✅ Tunnel B token already configured${NC}"
fi

echo ""
echo "📋 Step 4: Creating tunnel configuration file..."
echo ""

# Create the supabase-tunnel.yml with proper variable substitution
cat > supabase-tunnel.yml << EOF
# Supabase Secure Tunnel Configuration
# Auto-generated by deploy-tunnel-b.sh

tunnel: supabase-secure-tunnel
credentials-file: ~/.cloudflared/supabase-secure-tunnel.json

ingress:
  - hostname: db-secure.888intelligenceautomation.in
    service: ${SUPABASE_URL}
    originRequest:
      httpHostHeader: ${SUPABASE_PROJECT_REF}.supabase.co
      originServerName: ${SUPABASE_PROJECT_REF}.supabase.co
      noTLSVerify: false
      connectTimeout: 30s
      tlsTimeout: 10s
      tcpKeepAlive: 30s
      keepAliveConnections: 100
      keepAliveTimeout: 90s
      http2Origin: true
  - service: http_status:404

metrics: 0.0.0.0:9091
loglevel: info
grace-period: 30s
retries: 5
EOF

echo -e "${GREEN}✅ Created supabase-tunnel.yml${NC}"

echo ""
echo "📋 Step 5: Configuring DNS..."
echo ""

# Configure DNS route
echo "Adding DNS route for db-secure.888intelligenceautomation.in..."
if cloudflared tunnel route dns supabase-secure-tunnel db-secure.888intelligenceautomation.in 2>&1 | grep -q "already exists"; then
    echo -e "${GREEN}✅ DNS route already exists${NC}"
else
    echo -e "${GREEN}✅ DNS route created${NC}"
fi

echo ""
echo "📋 Step 6: Installing Supabase dependencies..."
echo ""

# Check if @supabase/supabase-js is installed in frontend
if ! grep -q "@supabase/supabase-js" package.json 2>/dev/null; then
    echo "Installing @supabase/supabase-js for frontend..."
    npm install @supabase/supabase-js
    echo -e "${GREEN}✅ Frontend Supabase client installed${NC}"
else
    echo -e "${GREEN}✅ Frontend Supabase client already installed${NC}"
fi

# Install for backend if backend directory exists
if [ -d "backend" ]; then
    cd backend
    if ! grep -q "@supabase/supabase-js" package.json 2>/dev/null; then
        echo "Installing @supabase/supabase-js for backend..."
        npm install @supabase/supabase-js
        echo -e "${GREEN}✅ Backend Supabase client installed${NC}"
    else
        echo -e "${GREEN}✅ Backend Supabase client already installed${NC}"
    fi
    cd ..
fi

echo ""
echo "📋 Step 7: Testing tunnel configuration..."
echo ""

# Quick test of tunnel configuration
echo "Starting tunnel test (5 seconds)..."
timeout 5s cloudflared tunnel --config supabase-tunnel.yml run 2>&1 | head -20 &
TUNNEL_PID=$!
sleep 5
kill $TUNNEL_PID 2>/dev/null || true

echo -e "${GREEN}✅ Tunnel configuration appears valid${NC}"

echo ""
echo "=============================================="
echo -e "${GREEN}🎉 TUNNEL B SETUP COMPLETE!${NC}"
echo "=============================================="
echo ""
echo "📋 NEXT STEPS:"
echo ""
echo "1. ${YELLOW}CONFIGURE SUPABASE IP RESTRICTIONS:${NC}"
echo "   • Go to Supabase Dashboard → Settings → Database"
echo "   • Click 'Network restrictions'"
echo "   • Enable restrictions"
echo "   • Add ONLY these Cloudflare IP ranges:"
echo ""
echo "   173.245.48.0/20"
echo "   103.21.244.0/22"
echo "   103.22.200.0/22"
echo "   103.31.4.0/22"
echo "   141.101.64.0/18"
echo "   108.162.192.0/18"
echo "   190.93.240.0/20"
echo "   197.234.240.0/22"
echo "   198.41.128.0/17"
echo "   162.158.0.0/15"
echo "   104.16.0.0/13"
echo "   104.24.0.0/14"
echo "   172.64.0.0/13"
echo "   131.0.72.0/22"
echo ""
echo "2. ${YELLOW}TEST THE DUAL TUNNEL SYSTEM:${NC}"
echo "   node tunnel-manager-dual.js start"
echo ""
echo "3. ${YELLOW}VERIFY SECURITY:${NC}"
echo "   • Direct access should fail: curl $SUPABASE_URL/rest/v1/"
echo "   • Tunnel access should work: curl https://db-secure.888intelligenceautomation.in/rest/v1/"
echo ""
echo "4. ${YELLOW}UPDATE YOUR CODE:${NC}"
echo "   • Frontend: Use REACT_APP_SUPABASE_URL=https://db-secure.888intelligenceautomation.in"
echo "   • Backend: Use SUPABASE_CLIENT_URL=https://db-secure.888intelligenceautomation.in"
echo ""
echo "=============================================="

# Save deployment status
cat > tunnel-b-deployment.json << EOF
{
  "deployed_at": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
  "tunnel_name": "supabase-secure-tunnel",
  "tunnel_url": "https://db-secure.888intelligenceautomation.in",
  "supabase_project": "${SUPABASE_PROJECT_REF}",
  "supabase_url": "${SUPABASE_URL}",
  "status": "configured",
  "next_step": "configure_ip_restrictions"
}
EOF

echo ""
echo -e "${GREEN}✅ Deployment status saved to tunnel-b-deployment.json${NC}"
echo ""
echo "Run 'node tunnel-manager-dual.js start' to activate both tunnels!"
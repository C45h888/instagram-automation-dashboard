{"version":3,"file":"query-g2LX4SrS.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    const aItemsSet = new Set(aItems);\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          this.#revertState = void 0;\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","aItemsSet","equalItems","i","has","value","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","addToEnd","items","item","max","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","_a","super","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","_b","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","CancelledError","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","thenable","resolve","_resolve","_reject","finalize","data","assign","catch","reason","pendingThenable","canContinue","canRun","canStart","onSuccess","onError","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","_c","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","_d","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","prevData","structuralSharing","replaceData","__privateMethod","updatedAt","manual","setState","setStateOptions","reset","some","observer","resolveEnabled","enabled","isDisabled","getObserversCount","isStatic","getCurrentResult","isStaleByTime","timeUntilStale","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","onSettled","WeakSet","action","reducer","onQueryUpdate","QueryCache","_e","_queries","Map","build","defaultQueryOptions","getQueryDefaults","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","_f","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","React.createContext","QueryClientProvider","children","React.useEffect","jsx","Provider"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}
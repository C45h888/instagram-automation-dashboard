{"version":3,"file":"query-DYqp2gFO.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    const aItemsSet = new Set(aItems);\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","aItemsSet","equalItems","i","has","value","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","addToEnd","items","item","max","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","_a","super","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","_b","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","CancelledError","revert","silent","createRetryer","config","continueFn","isRetryCancelled","thenable","resolve","_resolve","_reject","finalize","data","assign","catch","reason","pendingThenable","isResolved","canContinue","canRun","canStart","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","onCancel","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","_c","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","_d","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","prevData","structuralSharing","replaceData","__privateMethod","updatedAt","manual","setState","setStateOptions","reset","some","observer","resolveEnabled","enabled","isDisabled","getObserversCount","isStatic","getCurrentResult","isStaleByTime","timeUntilStale","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","abort","_f","_e","onSuccess","_h","_g","onSettled","_j","_i","onError","_l","_k","WeakSet","action","newState","reducer","onQueryUpdate","QueryCache","_queries","Map","build","defaultQueryOptions","getQueryDefaults","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","_Mutation_instances","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","React.createContext","QueryClientProvider","children","React.useEffect","jsx","Provider"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}
{"version":3,"mappings":"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","names":["React","require$$0","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","error","format","_len2","arguments","length","args","Array","_key2","level","stack","ReactDebugCurrentFrame","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","printWarning","REACT_MODULE_REFERENCE","getContextName","type","displayName","getComponentNameFromType","tag","name","$$typeof","_context","outerType","innerType","wrapperName","functionName","getWrappedName","render","outerName","lazyComponent","payload","_payload","init","_init","x","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","assign","Object","disabledDepth","disabledLog","__reactDisabledLog","prefix","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","Error","match","trim","componentFrameCache","reentry","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","control","frame","get","previousDispatcher","previousPrepareStackTrace","prepareStackTrace","current","log","info","warn","group","groupCollapsed","groupEnd","props","configurable","enumerable","value","writable","defineProperties","disableLogs","Fake","defineProperty","set","Reflect","sample","sampleLines","split","controlLines","s","c","_frame","replace","includes","reenableLogs","syntheticFrame","describeUnknownElementTypeFrameInDEV","isReactComponent","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","_owner","_source","setExtraStackFrame","isArrayImpl","isArray","a","testStringCoercion","checkKeyStringCoercion","e","willCoercionThrow","toStringTag","constructor","typeName","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","jsxDEV","config","maybeKey","self","propName","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","hasValidRef","stateNode","componentName","warnIfStringRefCannotBeAutoConverted","defaultProps","warnAboutAccessingKey","defineKeyPropWarningGetter","warnAboutAccessingRef","defineRefPropWarningGetter","_store","freeze","ReactElement","propTypesMisspellWarningShown","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","isValidElement","object","getDeclarationErrorAddendum","ownerHasKeyUseWarning","validateExplicitKey","parentType","validated","currentComponentErrorInfo","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","maybeIterable","maybeIterator","getIteratorFn","entries","step","next","done","validatePropTypes","propTypes","typeSpecs","values","location","has","bind","typeSpecName","error$1","err","ex","message","checkPropTypes","PropTypes","getDefaultProps","isReactClassApproved","didWarnAboutKeySpread","jsxDEV$1","isStaticChildren","validType","getModuleId","isValidElementType","keys","typeString","sourceInfo","fileName","lineNumber","getSourceInfoErrorAddendum","children","filter","k","beforeExample","join","fragment","validateFragmentProps","reactJsxDevRuntime_development","Fragment","jsxDevRuntimeModule","exports","m","FunctionRegion","globalObject","window","global","getGlobal","fetch","nodeFetch","Headers","Request","Response","PostgrestError_1","context","super","this","details","hint","code","default","PostgrestError","__importDefault","mod","__esModule","PostgrestBuilder_1","node_fetch_1","require$$1","builder","_a","_b","shouldThrowOnError","method","url","headers","schema","body","signal","isMaybeSingle","throwOnError","setHeader","then","onfulfilled","onrejected","res","_fetch","toString","JSON","stringify","async","_c","_d","data","count","status","statusText","ok","text","parse","countHeader","contentRange","parseInt","_e","catch","fetchError","returns","overrideTypes","PostgrestTransformBuilder_1","PostgrestTransformBuilder$1","select","columns","quoted","cleanedColumns","test","searchParams","append","order","column","ascending","nullsFirst","foreignTable","referencedTable","existingOrder","limit","range","from","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","options","Boolean","forMediatype","rollback","maxAffected","PostgrestTransformBuilder","PostgrestFilterBuilder_1","PostgrestFilterBuilder$1","eq","neq","gt","gte","lt","lte","like","pattern","likeAllOf","patterns","likeAnyOf","ilike","ilikeAllOf","ilikeAnyOf","is","cleanedValues","Set","RegExp","contains","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","typePart","configPart","forEach","not","operator","or","filters","PostgrestFilterBuilder","PostgrestQueryBuilder_1","head","insert","defaultToNull","reduce","acc","uniqueColumns","upsert","onConflict","ignoreDuplicates","update","PostgrestClient_1","PostgrestClient","schemaName","relation","URL","rpc","_","cjs","PostgrestBuilder","PostgrestQueryBuilder","require$$2","require$$3","require$$4","require$$5","_default","index","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","PostgresTypes","REALTIME_PRESENCE_LISTEN_EVENTS","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","JS_ENV","Deno","document","navigator","product","version","AUTO_REFRESH_TICK_DURATION_MS","EXPIRY_MARGIN_MS","AUTO_REFRESH_TICK_THRESHOLD","DEFAULT_HEADERS","API_VERSION_HEADER_NAME","API_VERSIONS","timestamp","Date","BASE64URL_REGEX","AuthError","__isAuthError","isAuthError","AuthApiError","AuthUnknownError","originalError","CustomAuthError","AuthSessionMissingError","AuthInvalidTokenResponseError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","toJSON","AuthPKCEGrantCodeExchangeError","AuthRetryableFetchError","isAuthRetryableFetchError","AuthWeakPasswordError","reasons","AuthInvalidJwtError","TO_BASE64URL","IGNORE_BASE64URL","FROM_BASE64URL","charMap","charCodeAt","byteToBase64URL","byte","state","emit","queue","queuedBits","pos","byteFromBase64URL","charCode","bits","fromCharCode","stringFromBase64URL","str","conv","utf8Emit","codepoint","push","fromCodePoint","utf8State","utf8seq","b64State","byteEmit","leadingBit","stringFromUTF8","codepointToUTF8","base64UrlToUint8Array","result","onByte","Uint8Array","stringToUint8Array","highSurrogate","stringToUTF8","bytesToBase64URL","bytes","onChar","char","isBrowser","localStorageWriteTests","tested","supportsLocalStorage","globalThis","localStorage","randomKey","Math","random","setItem","removeItem","resolveFetch","customFetch","__vitePreload","Promise","resolve","browser","__VITE_PRELOAD__","setItemAsync","storage","getItemAsync","getItem","removeItemAsync","Deferred","promise","promiseConstructor","rej","reject","decodeJWT","token","parts","header","signature","raw","dec2hex","dec","substr","generatePKCEChallenge","verifier","crypto","subtle","TextEncoder","hashed","randomString","encodedData","encode","hash","digest","sha256","btoa","getCodeChallengeAndMethod","storageKey","isPasswordRecovery","codeVerifier","array","Uint32Array","charSet","charSetLen","charAt","floor","getRandomValues","generatePKCEVerifier","storedCodeVerifier","codeChallenge","API_VERSION_REGEX","UUID_REGEX","validateUUID","userNotAvailableProxy","Proxy","target","prop","sProp","_target","deleteProperty","deepClone","obj","_getErrorMessage","msg","error_description","NETWORK_ERROR_CODES","handleError","maybeResponse","json","errorCode","responseAPIVersion","response","apiVersion","parseResponseAPIVersion","getTime","error_code","weak_password","_request","fetcher","jwt","qs","redirectTo","queryString","URLSearchParams","parameters","requestParams","params","_getRequestParams","noResolveJson","_handleRequest","xform","_sessionResponse","session","expiresIn","access_token","refresh_token","expires_in","hasSession","expires_at","round","now","user","_sessionResponsePassword","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","t","p","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","properties","_noResolveJsonResponse","SIGN_OUT_SCOPES","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","scope","inviteUserByEmail","email","generateLink","new_email","newEmail","createUser","attributes","listUsers","_f","_g","pagination","nextPage","lastPage","total","page","per_page","perPage","users","links","link","substring","rel","getUserById","uid","updateUserById","deleteUser","id","shouldSoftDelete","should_soft_delete","userId","factors","memoryLocalStorageAdapter","store","internals","LockAcquireTimeoutError","isAcquireTimeout","NavigatorLockAcquireTimeoutError","navigatorLock","acquireTimeout","abortController","AbortController","setTimeout","abort","locks","request","mode","ifAvailable","lock","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","flowType","debug","hasCustomAuthorizationHeader","lockNoOp","GLOBAL_JWKS","GoTrueClient","userStorage","memoryStorage","stateChangeEmitters","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","suppressGetSessionWarning","lockAcquired","pendingInLock","broadcastChannel","logger","instanceID","nextInstanceID","logDebugMessages","admin","jwks","jwks_cached_at","Number","MIN_SAFE_INTEGER","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","BroadcastChannel","addEventListener","event","_debug","_notifyAllSubscribers","initialize","cachedAt","toISOString","_acquireLock","_initialize","href","parseParametersFromURL","callbackUrlType","_isImplicitGrantCallback","_isPKCECallback","_getSessionFromURL","isAuthImplicitGrantRedirectError","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","signInAnonymously","credentials","gotrue_meta_security","captcha_token","captchaToken","signUp","password","codeChallengeMethod","emailRedirectTo","code_challenge","code_challenge_method","phone","channel","signInWithPassword","weakPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","exchangeCodeForSession","authCode","_exchangeCodeForSession","signInWithWeb3","chain","signInWithSolana","_h","_j","_k","_l","_m","wallet","statement","resolvedWallet","windowAny","solana","signIn","signMessage","output","issuedAt","domain","host","uri","outputToProcess","signedMessage","TextDecoder","decode","publicKey","toBase58","notBefore","expirationTime","chainId","nonce","requestId","resources","resource","maybeSignature","storageItem","auth_code","code_verifier","signInWithIdToken","id_token","signInWithOtp","create_user","shouldCreateUser","messageId","message_id","verifyOtp","signInWithSSO","provider_id","providerId","skip_http_redirect","reauthenticate","_reauthenticate","_useSession","sessionError","resend","endpoint","getSession","last","waitOn","all","splice","__loadSession","currentSession","maybeSession","_isValidSession","hasExpired","maybeUser","isServer","suppressWarning","receiver","_callRefreshToken","getUser","_getUser","isAuthSessionMissingError","updateUser","_updateUser","sessionData","userError","setSession","_setSession","timeNow","expiresAt","exp","refreshedSession","token_type","refreshSession","_refreshSession","delete","history","replaceState","provider_token","provider_refresh_token","currentStorageContent","_signOut","accessToken","isAuthApiError","onAuthStateChange","callback","r","subscription","unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","identities","linkIdentity","_getUrlForProvider","unlinkIdentity","identity","identity_id","_refreshAccessToken","refreshToken","debugName","startedAt","attempt","time","accept","sleep","pow","isRetryable","nextBackOffInterval","Infinity","separateUser","expiresWithMargin","__isUserNotAvailableProxy","getUserError","broadcast","postMessage","errors","promises","sessionToProcess","userIsProxy","mainSessionData","clonedMainSessionData","clonedSession","_removeVisibilityChangedCallback","removeEventListener","_startAutoRefresh","_stopAutoRefresh","ticker","setInterval","_autoRefreshTokenTick","unref","unrefTimer","clearInterval","startAutoRefresh","stopAutoRefresh","expiresInTicks","_onVisibilityChanged","calledFromInitialize","methodName","visibilityState","urlParams","encodeURIComponent","flowParams","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","amr","fetchJwk","kid","jwk","find","getClaims","rawHeader","rawPayload","allowExpired","validateExp","signingKey","alg","startsWith","claims","algorithm","namedCurve","getAlgorithm","importKey","process","processVersion","versionMatch","shouldShowDeprecationWarning","missingVars"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"sources":["../../node_modules/react/cjs/react-jsx-dev-runtime.development.js","../../node_modules/react/jsx-dev-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/zustand/esm/middleware.mjs","../../node_modules/@supabase/functions-js/dist/module/types.js","../../node_modules/@supabase/node-fetch/browser.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js","../../node_modules/@supabase/postgrest-js/dist/cjs/index.js","../../node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","../../node_modules/@supabase/storage-js/dist/module/lib/errors.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/@supabase/auth-js/dist/module/lib/version.js","../../node_modules/@supabase/auth-js/dist/module/lib/constants.js","../../node_modules/@supabase/auth-js/dist/module/lib/errors.js","../../node_modules/@supabase/auth-js/dist/module/lib/base64url.js","../../node_modules/@supabase/auth-js/dist/module/lib/helpers.js","../../node_modules/@supabase/auth-js/dist/module/lib/fetch.js","../../node_modules/@supabase/auth-js/dist/module/lib/types.js","../../node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js","../../node_modules/@supabase/auth-js/dist/module/lib/local-storage.js","../../node_modules/@supabase/auth-js/dist/module/lib/locks.js","../../node_modules/@supabase/auth-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/auth-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../src/lib/supabase.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-dev-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-dev-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? {\n      type: anonymousActionType || findCallerName(new Error().stack) || \"anonymous\"\n    } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        this.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n// Define the enum for the 'region' property\nexport var FunctionRegion;\n(function (FunctionRegion) {\n    FunctionRegion[\"Any\"] = \"any\";\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\n})(FunctionRegion || (FunctionRegion = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nexport const fetch = globalObject.fetch;\n\nexport default globalObject.fetch.bind(globalObject);\n\nexport const Headers = globalObject.Headers;\nexport const Request = globalObject.Request;\nexport const Response = globalObject.Response;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nclass PostgrestError extends Error {\n    constructor(context) {\n        super(context.message);\n        this.name = 'PostgrestError';\n        this.details = context.details;\n        this.hint = context.hint;\n        this.code = context.code;\n    }\n}\nexports.default = PostgrestError;\n//# sourceMappingURL=PostgrestError.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst node_fetch_1 = __importDefault(require(\"@supabase/node-fetch\"));\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nclass PostgrestBuilder {\n    constructor(builder) {\n        var _a, _b;\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = new Headers(builder.headers);\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = (_a = builder.shouldThrowOnError) !== null && _a !== void 0 ? _a : false;\n        this.signal = builder.signal;\n        this.isMaybeSingle = (_b = builder.isMaybeSingle) !== null && _b !== void 0 ? _b : false;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = node_fetch_1.default;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Set an HTTP header for the request.\n     */\n    setHeader(name, value) {\n        this.headers = new Headers(this.headers);\n        this.headers.set(name, value);\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers.set('Accept-Profile', this.schema);\n        }\n        else {\n            this.headers.set('Content-Profile', this.schema);\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers.set('Content-Type', 'application/json');\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c, _d;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers.get('Accept') === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers.get('Accept') &&\n                        ((_a = this.headers.get('Accept')) === null || _a === void 0 ? void 0 : _a.includes('application/vnd.pgrst.plan+text'))) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_b = this.headers.get('Prefer')) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_e) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_d = error === null || error === void 0 ? void 0 : error.details) === null || _d === void 0 ? void 0 : _d.includes('0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw new PostgrestError_1.default(error);\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        /* istanbul ignore next */\n        return this;\n    }\n    /**\n     * Override the type of the returned `data` field in the response.\n     *\n     * @typeParam NewResult - The new type to cast the response data to\n     * @typeParam Options - Optional type configuration (defaults to { merge: true })\n     * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\n     * @example\n     * ```typescript\n     * // Merge with existing types (default behavior)\n     * const query = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ custom_field: string }>()\n     *\n     * // Replace existing types completely\n     * const replaceQuery = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\n     * ```\n     * @returns A PostgrestBuilder instance with the new type\n     */\n    overrideTypes() {\n        return this;\n    }\n}\nexports.default = PostgrestBuilder;\n//# sourceMappingURL=PostgrestBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        this.headers.append('Prefer', 'return=representation');\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order referenced tables, but it only affects the ordering of the\n     * parent table if you use `!inner` in the query.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.referencedTable - Set this to order a referenced table by\n     * its columns\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    limit(count, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n     * Only records within this range are returned.\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n     * and fourth rows of the query.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    range(from, to, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const keyOffset = typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`;\n        const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers.set('Accept', 'application/vnd.pgrst.object+json');\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers.set('Accept', 'application/json');\n        }\n        else {\n            this.headers.set('Accept', 'application/vnd.pgrst.object+json');\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers.set('Accept', 'text/csv');\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers.set('Accept', 'application/geo+json');\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * You need to enable the\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n     * setting before using this method.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        var _a;\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = (_a = this.headers.get('Accept')) !== null && _a !== void 0 ? _a : 'application/json';\n        this.headers.set('Accept', `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`);\n        if (format === 'json') {\n            return this;\n        }\n        else {\n            return this;\n        }\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        this.headers.append('Prefer', 'tx=rollback');\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        return this;\n    }\n    /**\n     * Set the maximum number of rows that can be affected by the query.\n     * Only available in PostgREST v13+ and only works with PATCH and DELETE methods.\n     *\n     * @param value - The maximum number of rows that can be affected\n     */\n    maxAffected(value) {\n        this.headers.append('Prefer', 'handling=strict');\n        this.headers.append('Prefer', `max-affected=${value}`);\n        return this;\n    }\n}\nexports.default = PostgrestTransformBuilder;\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = Array.from(new Set(values))\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to filter on referenced tables\n     * instead of the parent table\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\n     */\n    or(filters, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\nexports.default = PostgrestFilterBuilder;\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nclass PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = new Headers(headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. Only applies for bulk\n     * inserts.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        var _a;\n        const method = 'POST';\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        if (!defaultToNull) {\n            this.headers.append('Prefer', `missing=default`);\n        }\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        var _a;\n        const method = 'POST';\n        this.headers.append('Prefer', `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`);\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        if (!defaultToNull) {\n            this.headers.append('Prefer', 'missing=default');\n        }\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        var _a;\n        const method = 'PATCH';\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        var _a;\n        const method = 'DELETE';\n        if (count) {\n            this.headers.append('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n}\nexports.default = PostgrestQueryBuilder;\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nclass PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = new Headers(headers);\n        this.schemaName = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder_1.default(url, {\n            headers: new Headers(this.headers),\n            schema: this.schemaName,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return new PostgrestClient(this.url, {\n            headers: this.headers,\n            schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, get = false, count, } = {}) {\n        var _a;\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head || get) {\n            method = head ? 'HEAD' : 'GET';\n            Object.entries(args)\n                // params with undefined value needs to be filtered out, otherwise it'll\n                // show up as `?param=undefined`\n                .filter(([_, value]) => value !== undefined)\n                // array values need special syntax\n                .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\n                .forEach(([name, value]) => {\n                url.searchParams.append(name, value);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = new Headers(this.headers);\n        if (count) {\n            headers.set('Prefer', `count=${count}`);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url,\n            headers,\n            schema: this.schemaName,\n            body,\n            fetch: (_a = this.fetch) !== null && _a !== void 0 ? _a : fetch,\n        });\n    }\n}\nexports.default = PostgrestClient;\n//# sourceMappingURL=PostgrestClient.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\n// Always update wrapper.mjs when updating this file.\nconst PostgrestClient_1 = __importDefault(require(\"./PostgrestClient\"));\nexports.PostgrestClient = PostgrestClient_1.default;\nconst PostgrestQueryBuilder_1 = __importDefault(require(\"./PostgrestQueryBuilder\"));\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\nconst PostgrestFilterBuilder_1 = __importDefault(require(\"./PostgrestFilterBuilder\"));\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\nconst PostgrestTransformBuilder_1 = __importDefault(require(\"./PostgrestTransformBuilder\"));\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\nconst PostgrestBuilder_1 = __importDefault(require(\"./PostgrestBuilder\"));\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\nconst PostgrestError_1 = __importDefault(require(\"./PostgrestError\"));\nexports.PostgrestError = PostgrestError_1.default;\nexports.default = {\n    PostgrestClient: PostgrestClient_1.default,\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\n    PostgrestBuilder: PostgrestBuilder_1.default,\n    PostgrestError: PostgrestError_1.default,\n};\n//# sourceMappingURL=index.js.map","import index from '../cjs/index.js'\nconst {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n} = index\n\nexport {\n  PostgrestBuilder,\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n  PostgrestTransformBuilder,\n  PostgrestError,\n}\n\n// compatibility with CJS output\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\n","import { version } from './version';\nexport const DEFAULT_VERSION = `realtime-js/${version}`;\nexport const VSN = '1.0.0';\nexport const VERSION = version;\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport const MAX_PUSH_BUFFER_SIZE = 100;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\nexport const httpEndpointURL = (socketUrl) => {\n    let url = socketUrl;\n    url = url.replace(/^ws/i, 'http');\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '');\n    return url.replace(/\\/+$/, '') + '/api/broadcast';\n};\n//# sourceMappingURL=transformers.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.enabled = false;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES, MAX_PUSH_BUFFER_SIZE, } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nimport { httpEndpointURL } from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\nexport const REALTIME_CHANNEL_STATES = CHANNEL_STATES;\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.subTopic = topic.replace(/^realtime:/i, '');\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '', enabled: false },\n            private: false,\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('error', (reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n        this.broadcastEndpointURL = httpEndpointURL(this.socket.endPoint);\n        this.private = this.params.config.private || false;\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b, _c;\n        if (!this.socket.isConnected()) {\n            this.socket.connect();\n        }\n        if (this.state == CHANNEL_STATES.closed) {\n            const { config: { broadcast, presence, private: isPrivate }, } = this.params;\n            const postgres_changes = (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [];\n            const presence_enabled = (!!this.bindings[REALTIME_LISTEN_TYPES.PRESENCE] &&\n                this.bindings[REALTIME_LISTEN_TYPES.PRESENCE].length > 0) ||\n                ((_c = this.params.config.presence) === null || _c === void 0 ? void 0 : _c.enabled) === true;\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence: Object.assign(Object.assign({}, presence), { enabled: presence_enabled }),\n                postgres_changes,\n                private: isPrivate,\n            };\n            if (this.socket.accessTokenValue) {\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\n            }\n            this._onError((e) => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\n            this._onClose(() => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', async ({ postgres_changes }) => {\n                var _a;\n                this.socket.setAuth();\n                if (postgres_changes === undefined) {\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            this.state = CHANNEL_STATES.errored;\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                this.state = CHANNEL_STATES.errored;\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    async track(payload, opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'track',\n            payload,\n        }, opts.timeout || this.timeout);\n    }\n    async untrack(opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'untrack',\n        }, opts);\n    }\n    on(type, filter, callback) {\n        if (this.state === CHANNEL_STATES.joined &&\n            type === REALTIME_LISTEN_TYPES.PRESENCE) {\n            this.socket.log('channel', `resubscribe to ${this.topic} due to change in presence callbacks on joined channel`);\n            this.unsubscribe().then(() => this.subscribe());\n        }\n        return this._on(type, filter, callback);\n    }\n    /**\n     * Sends a message into the channel.\n     *\n     * @param args Arguments to send to channel\n     * @param args.type The type of event to send\n     * @param args.event The name of the event being sent\n     * @param args.payload Payload to be sent\n     * @param opts Options to be used during the send process\n     */\n    async send(args, opts = {}) {\n        var _a, _b;\n        if (!this._canPush() && args.type === 'broadcast') {\n            const { event, payload: endpoint_payload } = args;\n            const authorization = this.socket.accessTokenValue\n                ? `Bearer ${this.socket.accessTokenValue}`\n                : '';\n            const options = {\n                method: 'POST',\n                headers: {\n                    Authorization: authorization,\n                    apikey: this.socket.apiKey ? this.socket.apiKey : '',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    messages: [\n                        {\n                            topic: this.subTopic,\n                            event,\n                            payload: endpoint_payload,\n                            private: this.private,\n                        },\n                    ],\n                }),\n            };\n            try {\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\n                return response.ok ? 'ok' : 'error';\n            }\n            catch (error) {\n                if (error.name === 'AbortError') {\n                    return 'timed out';\n                }\n                else {\n                    return 'error';\n                }\n            }\n        }\n        else {\n            return new Promise((resolve) => {\n                var _a, _b, _c;\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\n                if (args.type === 'broadcast' && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                    resolve('ok');\n                }\n                push.receive('ok', () => resolve('ok'));\n                push.receive('error', () => resolve('error'));\n                push.receive('timeout', () => resolve('timed out'));\n            });\n        }\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.joinPush.destroy();\n        let leavePush = null;\n        return new Promise((resolve) => {\n            leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        }).finally(() => {\n            leavePush === null || leavePush === void 0 ? void 0 : leavePush.destroy();\n        });\n    }\n    /**\n     * Teardown the channel.\n     *\n     * Destroys and stops related timers.\n     */\n    teardown() {\n        this.pushBuffer.forEach((push) => push.destroy());\n        this.pushBuffer = [];\n        this.rejoinTimer.reset();\n        this.joinPush.destroy();\n        this.state = CHANNEL_STATES.closed;\n        this.bindings = {};\n    }\n    /** @internal */\n    async _fetchWithTimeout(url, options, timeout) {\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));\n        clearTimeout(id);\n        return response;\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            this._addToPushBuffer(pushEvent);\n        }\n        return pushEvent;\n    }\n    /** @internal */\n    _addToPushBuffer(pushEvent) {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n        // Enforce buffer size limit\n        if (this.pushBuffer.length > MAX_PUSH_BUFFER_SIZE) {\n            const removedPush = this.pushBuffer.shift();\n            if (removedPush) {\n                removedPush.destroy();\n                this.socket.log('channel', `discarded push due to buffer overflow: ${removedPush.event}`, removedPush.payload);\n            }\n        }\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n                var _a;\n                return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                    RealtimeChannel.isEqual(bind.filter, filter));\n            });\n        }\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status, statusCode) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n        this.statusCode = statusCode;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            statusCode: this.statusCode,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","import { version } from './version';\nlet JS_ENV = '';\n// @ts-ignore\nif (typeof Deno !== 'undefined') {\n    JS_ENV = 'deno';\n}\nelse if (typeof document !== 'undefined') {\n    JS_ENV = 'web';\n}\nelse if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    JS_ENV = 'react-native';\n}\nelse {\n    JS_ENV = 'node';\n}\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${version}` };\nexport const DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nexport const DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nexport const DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nexport const DEFAULT_REALTIME_OPTIONS = {};\n//# sourceMappingURL=constants.js.map","export const version = '2.71.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\n/** Current session will be checked for refresh at this interval. */\nexport const AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nexport const AUTO_REFRESH_TICK_THRESHOLD = 3;\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */\nexport const EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\nexport const API_VERSIONS = {\n    '2024-01-01': {\n        timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n        name: '2024-01-01',\n    },\n};\nexport const BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\nexport const JWKS_TTL = 10 * 60 * 1000; // 10 minutes\n//# sourceMappingURL=constants.js.map","export class AuthError extends Error {\n    constructor(message, status, code) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status, code) {\n        super(message, status, code);\n        this.name = 'AuthApiError';\n        this.status = status;\n        this.code = code;\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status, code) {\n        super(message, status, code);\n        this.name = name;\n        this.status = status;\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\n    }\n}\nexport function isAuthSessionMissingError(error) {\n    return isAuthError(error) && error.name === 'AuthSessionMissingError';\n}\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\n    constructor() {\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400, undefined);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport function isAuthImplicitGrantRedirectError(error) {\n    return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError';\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status, undefined);\n    }\n}\nexport function isAuthRetryableFetchError(error) {\n    return isAuthError(error) && error.name === 'AuthRetryableFetchError';\n}\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */\nexport class AuthWeakPasswordError extends CustomAuthError {\n    constructor(message, status, reasons) {\n        super(message, 'AuthWeakPasswordError', status, 'weak_password');\n        this.reasons = reasons;\n    }\n}\nexport function isAuthWeakPasswordError(error) {\n    return isAuthError(error) && error.name === 'AuthWeakPasswordError';\n}\nexport class AuthInvalidJwtError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidJwtError', 400, 'invalid_jwt');\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * Avoid modifying this file. It's part of\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\n * that repo!\n */\n/**\n * An array of characters that encode 6 bits into a Base64-URL alphabet\n * character.\n */\nconst TO_BASE64URL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split('');\n/**\n * An array of characters that can appear in a Base64-URL encoded string but\n * should be ignored.\n */\nconst IGNORE_BASE64URL = ' \\t\\n\\r='.split('');\n/**\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\n * used to skip the character, or if -1 used to error out.\n */\nconst FROM_BASE64URL = (() => {\n    const charMap = new Array(128);\n    for (let i = 0; i < charMap.length; i += 1) {\n        charMap[i] = -1;\n    }\n    for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\n        charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\n    }\n    for (let i = 0; i < TO_BASE64URL.length; i += 1) {\n        charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\n    }\n    return charMap;\n})();\n/**\n * Converts a byte to a Base64-URL string.\n *\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next Base64 character when ready.\n */\nexport function byteToBase64URL(byte, state, emit) {\n    if (byte !== null) {\n        state.queue = (state.queue << 8) | byte;\n        state.queuedBits += 8;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n    else if (state.queuedBits > 0) {\n        state.queue = state.queue << (6 - state.queuedBits);\n        state.queuedBits = 6;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n}\n/**\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\n *\n * @param charCode The char code of the JavaScript string.\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next byte.\n */\nexport function byteFromBase64URL(charCode, state, emit) {\n    const bits = FROM_BASE64URL[charCode];\n    if (bits > -1) {\n        // valid Base64-URL character\n        state.queue = (state.queue << 6) | bits;\n        state.queuedBits += 6;\n        while (state.queuedBits >= 8) {\n            emit((state.queue >> (state.queuedBits - 8)) & 0xff);\n            state.queuedBits -= 8;\n        }\n    }\n    else if (bits === -2) {\n        // ignore spaces, tabs, newlines, =\n        return;\n    }\n    else {\n        throw new Error(`Invalid Base64-URL character \"${String.fromCharCode(charCode)}\"`);\n    }\n}\n/**\n * Converts a JavaScript string (which may include any valid character) into a\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\n * then encoded as Base64-URL.\n *\n * @param str The string to convert.\n */\nexport function stringToBase64URL(str) {\n    const base64 = [];\n    const emitter = (char) => {\n        base64.push(char);\n    };\n    const state = { queue: 0, queuedBits: 0 };\n    stringToUTF8(str, (byte) => {\n        byteToBase64URL(byte, state, emitter);\n    });\n    byteToBase64URL(null, state, emitter);\n    return base64.join('');\n}\n/**\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\n * that the underlying string has been encoded as UTF-8.\n *\n * @param str The Base64-URL encoded string.\n */\nexport function stringFromBase64URL(str) {\n    const conv = [];\n    const utf8Emit = (codepoint) => {\n        conv.push(String.fromCodePoint(codepoint));\n    };\n    const utf8State = {\n        utf8seq: 0,\n        codepoint: 0,\n    };\n    const b64State = { queue: 0, queuedBits: 0 };\n    const byteEmit = (byte) => {\n        stringFromUTF8(byte, utf8State, utf8Emit);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit);\n    }\n    return conv.join('');\n}\n/**\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\n *\n * @param codepoint The Unicode codepoint.\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\n */\nexport function codepointToUTF8(codepoint, emit) {\n    if (codepoint <= 0x7f) {\n        emit(codepoint);\n        return;\n    }\n    else if (codepoint <= 0x7ff) {\n        emit(0xc0 | (codepoint >> 6));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0xffff) {\n        emit(0xe0 | (codepoint >> 12));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0x10ffff) {\n        emit(0xf0 | (codepoint >> 18));\n        emit(0x80 | ((codepoint >> 12) & 0x3f));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`);\n}\n/**\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\n *\n * @param str  The string to convert to UTF-8.\n * @param emit Function which will be called for each UTF-8 byte of the string.\n */\nexport function stringToUTF8(str, emit) {\n    for (let i = 0; i < str.length; i += 1) {\n        let codepoint = str.charCodeAt(i);\n        if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\n            // most UTF-16 codepoints are Unicode codepoints, except values in this\n            // range where the next UTF-16 codepoint needs to be combined with the\n            // current one to get the Unicode codepoint\n            const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff;\n            const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff;\n            codepoint = (lowSurrogate | highSurrogate) + 0x10000;\n            i += 1;\n        }\n        codepointToUTF8(codepoint, emit);\n    }\n}\n/**\n * Converts a UTF-8 byte to a Unicode codepoint.\n *\n * @param byte  The UTF-8 byte next in the sequence.\n * @param state The shared state between consecutive UTF-8 bytes in the\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\n * @param emit  Function which will be called for each codepoint.\n */\nexport function stringFromUTF8(byte, state, emit) {\n    if (state.utf8seq === 0) {\n        if (byte <= 0x7f) {\n            emit(byte);\n            return;\n        }\n        // count the number of 1 leading bits until you reach 0\n        for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\n            if (((byte >> (7 - leadingBit)) & 1) === 0) {\n                state.utf8seq = leadingBit;\n                break;\n            }\n        }\n        if (state.utf8seq === 2) {\n            state.codepoint = byte & 31;\n        }\n        else if (state.utf8seq === 3) {\n            state.codepoint = byte & 15;\n        }\n        else if (state.utf8seq === 4) {\n            state.codepoint = byte & 7;\n        }\n        else {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.utf8seq -= 1;\n    }\n    else if (state.utf8seq > 0) {\n        if (byte <= 0x7f) {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.codepoint = (state.codepoint << 6) | (byte & 63);\n        state.utf8seq -= 1;\n        if (state.utf8seq === 0) {\n            emit(state.codepoint);\n        }\n    }\n}\n/**\n * Helper functions to convert different types of strings to Uint8Array\n */\nexport function base64UrlToUint8Array(str) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onByte = (byte) => {\n        result.push(byte);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), state, onByte);\n    }\n    return new Uint8Array(result);\n}\nexport function stringToUint8Array(str) {\n    const result = [];\n    stringToUTF8(str, (byte) => result.push(byte));\n    return new Uint8Array(result);\n}\nexport function bytesToBase64URL(bytes) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onChar = (char) => {\n        result.push(char);\n    };\n    bytes.forEach((byte) => byteToBase64URL(byte, state, onChar));\n    // always call with `null` after processing all bytes\n    byteToBase64URL(null, state, onChar);\n    return result.join('');\n}\n//# sourceMappingURL=base64url.js.map","import { API_VERSION_HEADER_NAME, BASE64URL_REGEX } from './constants';\nimport { AuthInvalidJwtError } from './errors';\nimport { base64UrlToUint8Array, stringFromBase64URL } from './base64url';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nexport function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key) => {\n                result[key] = value;\n            });\n        }\n        catch (e) {\n            // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n        result[key] = value;\n    });\n    return result;\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => import('@supabase/node-fetch').then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n};\nexport const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nexport const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\nexport function decodeJWT(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new AuthInvalidJwtError('Invalid JWT structure');\n    }\n    // Regex checks for base64url format\n    for (let i = 0; i < parts.length; i++) {\n        if (!BASE64URL_REGEX.test(parts[i])) {\n            throw new AuthInvalidJwtError('JWT not in base64url format');\n        }\n    }\n    const data = {\n        // using base64url lib\n        header: JSON.parse(stringFromBase64URL(parts[0])),\n        payload: JSON.parse(stringFromBase64URL(parts[1])),\n        signature: base64UrlToUint8Array(parts[2]),\n        raw: {\n            header: parts[0],\n            payload: parts[1],\n        },\n    };\n    return data;\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport async function sleep(time) {\n    return await new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async () => {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes)\n        .map((c) => String.fromCharCode(c))\n        .join('');\n}\nexport async function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\n        typeof crypto.subtle !== 'undefined' &&\n        typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nexport function parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n        return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n        return null;\n    }\n    try {\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\n        return date;\n    }\n    catch (e) {\n        return null;\n    }\n}\nexport function validateExp(exp) {\n    if (!exp) {\n        throw new Error('Missing exp claim');\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n        throw new Error('JWT has expired');\n    }\n}\nexport function getAlgorithm(alg) {\n    switch (alg) {\n        case 'RS256':\n            return {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' },\n            };\n        case 'ES256':\n            return {\n                name: 'ECDSA',\n                namedCurve: 'P-256',\n                hash: { name: 'SHA-256' },\n            };\n        default:\n            throw new Error('Invalid alg claim');\n    }\n}\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nexport function validateUUID(str) {\n    if (!UUID_REGEX.test(str)) {\n        throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n    }\n}\nexport function userNotAvailableProxy() {\n    const proxyTarget = {};\n    return new Proxy(proxyTarget, {\n        get: (target, prop) => {\n            if (prop === '__isUserNotAvailableProxy') {\n                return true;\n            }\n            // Preventative check for common problematic symbols during cloning/inspection\n            // These symbols might be accessed by structuredClone or other internal mechanisms.\n            if (typeof prop === 'symbol') {\n                const sProp = prop.toString();\n                if (sProp === 'Symbol(Symbol.toPrimitive)' ||\n                    sProp === 'Symbol(Symbol.toStringTag)' ||\n                    sProp === 'Symbol(util.inspect.custom)') {\n                    // Node.js util.inspect\n                    return undefined;\n                }\n            }\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`);\n        },\n        set: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n        deleteProperty: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n    });\n}\n/**\n * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n * Note: Only works for JSON-safe data.\n */\nexport function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n//# sourceMappingURL=helpers.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { API_VERSIONS, API_VERSION_HEADER_NAME } from './constants';\nimport { expiresAt, looksLikeFetchResponse, parseResponseAPIVersion } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthWeakPasswordError, AuthUnknownError, AuthSessionMissingError, } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst NETWORK_ERROR_CODES = [502, 503, 504];\nexport async function handleError(error) {\n    var _a;\n    if (!looksLikeFetchResponse(error)) {\n        throw new AuthRetryableFetchError(_getErrorMessage(error), 0);\n    }\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        throw new AuthRetryableFetchError(_getErrorMessage(error), error.status);\n    }\n    let data;\n    try {\n        data = await error.json();\n    }\n    catch (e) {\n        throw new AuthUnknownError(_getErrorMessage(e), e);\n    }\n    let errorCode = undefined;\n    const responseAPIVersion = parseResponseAPIVersion(error);\n    if (responseAPIVersion &&\n        responseAPIVersion.getTime() >= API_VERSIONS['2024-01-01'].timestamp &&\n        typeof data === 'object' &&\n        data &&\n        typeof data.code === 'string') {\n        errorCode = data.code;\n    }\n    else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n        errorCode = data.error_code;\n    }\n    if (!errorCode) {\n        // Legacy support for weak password errors, when there were no error codes\n        if (typeof data === 'object' &&\n            data &&\n            typeof data.weak_password === 'object' &&\n            data.weak_password &&\n            Array.isArray(data.weak_password.reasons) &&\n            data.weak_password.reasons.length &&\n            data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n            throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n        }\n    }\n    else if (errorCode === 'weak_password') {\n        throw new AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\n    }\n    else if (errorCode === 'session_not_found') {\n        // The `session_id` inside the JWT does not correspond to a row in the\n        // `sessions` table. This usually means the user has signed out, has been\n        // deleted, or their session has somehow been terminated.\n        throw new AuthSessionMissingError();\n    }\n    throw new AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\n}\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport async function _request(fetcher, method, url, options) {\n    var _a;\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (!headers[API_VERSION_HEADER_NAME]) {\n        headers[API_VERSION_HEADER_NAME] = API_VERSIONS['2024-01-01'].name;\n    }\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n        headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        qs['redirect_to'] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = await _handleRequest(fetcher, method, url + queryString, {\n        headers,\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson,\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n}\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n    const requestParams = _getRequestParams(method, options, parameters, body);\n    let result;\n    try {\n        result = await fetcher(url, Object.assign({}, requestParams));\n    }\n    catch (e) {\n        console.error(e);\n        // fetch failed, likely due to a network or CORS error\n        throw new AuthRetryableFetchError(_getErrorMessage(e), 0);\n    }\n    if (!result.ok) {\n        await handleError(result);\n    }\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n        return result;\n    }\n    try {\n        return await result.json();\n    }\n    catch (e) {\n        await handleError(e);\n    }\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        if (!data.expires_at) {\n            session.expires_at = expiresAt(data.expires_in);\n        }\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _sessionResponsePassword(data) {\n    const response = _sessionResponse(data);\n    if (!response.error &&\n        data.weak_password &&\n        typeof data.weak_password === 'object' &&\n        Array.isArray(data.weak_password.reasons) &&\n        data.weak_password.reasons.length &&\n        data.weak_password.message &&\n        typeof data.weak_password.message === 'string' &&\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n        response.data.weak_password = data.weak_password;\n    }\n    return response;\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","export const SIGN_OUT_SCOPES = ['global', 'local', 'others'];\n//# sourceMappingURL=types.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch, validateUUID } from './lib/helpers';\nimport { SIGN_OUT_SCOPES, } from './lib/types';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = SIGN_OUT_SCOPES[0]) {\n        if (SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n            throw new Error(`@supabase/auth-js: Parameter scope must be one of ${SIGN_OUT_SCOPES.join(', ')}`);\n        }\n        try {\n            await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true,\n            });\n            return { data: null, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n                body: { email, data: options.data },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\"options\"]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null,\n                    },\n                    error,\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\n            const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                },\n                xform: _noResolveJsonResponse,\n            });\n            if (response.error)\n                throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link) => {\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[`${rel}Page`] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { users: [] }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n        validateUUID(uid);\n        try {\n            return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n        validateUUID(uid);\n        try {\n            return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n        validateUUID(id);\n        try {\n            return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete,\n                },\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        validateUUID(params.userId);\n        try {\n            const { data, error } = await _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                headers: this.headers,\n                xform: (factors) => {\n                    return { data: { factors }, error: null };\n                },\n            });\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        validateUUID(params.userId);\n        validateUUID(params.id);\n        try {\n            const data = await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                headers: this.headers,\n            });\n            return { data, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store = {}) {\n    return {\n        getItem: (key) => {\n            return store[key] || null;\n        },\n        setItem: (key, value) => {\n            store[key] = value;\n        },\n        removeItem: (key) => {\n            delete store[key];\n        },\n    };\n}\n//# sourceMappingURL=local-storage.js.map","import { supportsLocalStorage } from './helpers';\n/**\n * @experimental\n */\nexport const internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis &&\n        supportsLocalStorage() &&\n        globalThis.localStorage &&\n        globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'),\n};\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */\nexport class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.isAcquireTimeout = true;\n    }\n}\nexport class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\nexport class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n        console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n        setTimeout(() => {\n            abortController.abort();\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n            }\n        }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0\n        ? {\n            mode: 'exclusive',\n            ifAvailable: true,\n        }\n        : {\n            mode: 'exclusive',\n            signal: abortController.signal,\n        }, async (lock) => {\n        if (lock) {\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n            }\n            try {\n                return await fn();\n            }\n            finally {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n                }\n            }\n        }\n        else {\n            if (acquireTimeout === 0) {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n                }\n                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n            }\n            else {\n                if (internals.debug) {\n                    try {\n                        const result = await globalThis.navigator.locks.query();\n                        console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n                    }\n                    catch (e) {\n                        console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n                    }\n                }\n                // Browser is not following the Navigator LockManager spec, it\n                // returned a null lock when we didn't use ifAvailable. So we can\n                // pretend the lock is acquired in the name of backward compatibility\n                // and user experience and just run the function.\n                console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n                return await fn();\n            }\n        }\n    }));\n}\nconst PROCESS_LOCKS = {};\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nexport async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([\n        previousOperation.catch(() => {\n            // ignore error of previous operation that we're waiting to finish\n            return null;\n        }),\n        acquireTimeout >= 0\n            ? new Promise((_, reject) => {\n                setTimeout(() => {\n                    reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n                }, acquireTimeout);\n            })\n            : null,\n    ].filter((x) => x))\n        .catch((e) => {\n        if (e && e.isAcquireTimeout) {\n            throw e;\n        }\n        return null;\n    })\n        .then(async () => {\n        // previous operations finished and we didn't get a race on the acquire\n        // timeout, so the current operation can finally start\n        return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e) => {\n        if (e && e.isAcquireTimeout) {\n            // if the current operation timed out, it doesn't mean that the previous\n            // operation finished, so we need contnue waiting for it to finish\n            await previousOperation;\n            return null;\n        }\n        throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n}\n//# sourceMappingURL=locks.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN_MS, AUTO_REFRESH_TICK_DURATION_MS, AUTO_REFRESH_TICK_THRESHOLD, GOTRUE_URL, STORAGE_KEY, JWKS_TTL, } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthSessionMissingError, AuthInvalidTokenResponseError, AuthUnknownError, isAuthApiError, isAuthError, isAuthRetryableFetchError, isAuthSessionMissingError, isAuthImplicitGrantRedirectError, AuthInvalidJwtError, } from './lib/errors';\nimport { _request, _sessionResponse, _sessionResponsePassword, _userResponse, _ssoResponse, } from './lib/fetch';\nimport { Deferred, getItemAsync, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, parseParametersFromURL, getCodeChallengeAndMethod, getAlgorithm, validateExp, decodeJWT, userNotAvailableProxy, supportsLocalStorage, } from './lib/helpers';\nimport { memoryLocalStorageAdapter } from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\nimport { version } from './lib/version';\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks';\nimport { stringToUint8Array, bytesToBase64URL } from './lib/base64url';\nimport { deepClone } from './lib/helpers';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false,\n};\nasync function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n}\n/**\n * Caches JWKS values for all clients created in the same environment. This is\n * especially useful for shared-memory execution environments such as Vercel's\n * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n * many clients are created, if they share the same storage key they will use\n * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n * JWTs.\n */\nconst GLOBAL_JWKS = {};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a, _b;\n        /**\n         * @experimental\n         */\n        this.userStorage = null;\n        this.memoryStorage = null;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        this.hasCustomAuthorizationHeader = false;\n        this.suppressGetSessionWarning = false;\n        this.lockAcquired = false;\n        this.pendingInLock = [];\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        this.logger = console.log;\n        this.instanceID = GoTrueClient.nextInstanceID;\n        GoTrueClient.nextInstanceID += 1;\n        if (this.instanceID > 0 && isBrowser()) {\n            console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n        }\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.logDebugMessages = !!settings.debug;\n        if (typeof settings.debug === 'function') {\n            this.logger = settings.debug;\n        }\n        this.persistSession = settings.persistSession;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.lock = settings.lock || lockNoOp;\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n        if (settings.lock) {\n            this.lock = settings.lock;\n        }\n        else if (isBrowser() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n            this.lock = navigatorLock;\n        }\n        else {\n            this.lock = lockNoOp;\n        }\n        if (!this.jwks) {\n            this.jwks = { keys: [] };\n            this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n        }\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (this.persistSession) {\n            if (settings.storage) {\n                this.storage = settings.storage;\n            }\n            else {\n                if (supportsLocalStorage()) {\n                    this.storage = globalThis.localStorage;\n                }\n                else {\n                    this.memoryStorage = {};\n                    this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n                }\n            }\n            if (settings.userStorage) {\n                this.userStorage = settings.userStorage;\n            }\n        }\n        else {\n            this.memoryStorage = {};\n            this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n        }\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async (event) => {\n                this._debug('received broadcast notification from other tab or client', event);\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    get jwks() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : { keys: [] };\n    }\n    set jwks(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), { jwks: value });\n    }\n    get jwks_cached_at() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n    }\n    set jwks_cached_at(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), { cachedAt: value });\n    }\n    _debug(...args) {\n        if (this.logDebugMessages) {\n            this.logger(`GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n        if (this.initializePromise) {\n            return await this.initializePromise;\n        }\n        this.initializePromise = (async () => {\n            return await this._acquireLock(-1, async () => {\n                return await this._initialize();\n            });\n        })();\n        return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n        var _a;\n        try {\n            const params = parseParametersFromURL(window.location.href);\n            let callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n                callbackUrlType = 'implicit';\n            }\n            else if (await this._isPKCECallback(params)) {\n                callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if (isBrowser() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\n                if (error) {\n                    this._debug('#_initialize()', 'error detecting session from URL', error);\n                    if (isAuthImplicitGrantRedirectError(error)) {\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                        if (errorCode === 'identity_already_exists' ||\n                            errorCode === 'identity_not_found' ||\n                            errorCode === 'single_identity_not_deletable') {\n                            return { error };\n                        }\n                    }\n                    // failed login attempt via url,\n                    // remove old session as in verifyOtp, signUp and signInWith*\n                    await this._removeSession();\n                    return { error };\n                }\n                const { session, redirectType } = data;\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n                await this._saveSession(session);\n                setTimeout(async () => {\n                    if (redirectType === 'recovery') {\n                        await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    }\n                    else {\n                        await this._notifyAllSubscribers('SIGNED_IN', session);\n                    }\n                }, 0);\n                return { error: null };\n            }\n            // no login attempt via callback url try to recover session from storage\n            await this._recoverAndRefresh();\n            return { error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { error };\n            }\n            return {\n                error: new AuthUnknownError('Unexpected error during initialization', error),\n            };\n        }\n        finally {\n            await this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n        }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n        var _a, _b, _c;\n        try {\n            const res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                    gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n        var _a, _b, _c;\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: {\n                        email,\n                        password,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponsePassword,\n                });\n            }\n            else {\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n                data: Object.assign({ user: data.user, session: data.session }, (data.weak_password ? { weakPassword: data.weak_password } : null)),\n                error,\n            };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return await this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n        await this.initializePromise;\n        return this._acquireLock(-1, async () => {\n            return this._exchangeCodeForSession(authCode);\n        });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Only Solana supported at this time, using the Sign in with Solana standard.\n     */\n    async signInWithWeb3(credentials) {\n        const { chain } = credentials;\n        if (chain === 'solana') {\n            return await this.signInWithSolana(credentials);\n        }\n        throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n    }\n    async signInWithSolana(credentials) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        let message;\n        let signature;\n        if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n        }\n        else {\n            const { chain, wallet, statement, options } = credentials;\n            let resolvedWallet;\n            if (!isBrowser()) {\n                if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                    throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n                }\n                resolvedWallet = wallet;\n            }\n            else if (typeof wallet === 'object') {\n                resolvedWallet = wallet;\n            }\n            else {\n                const windowAny = window;\n                if ('solana' in windowAny &&\n                    typeof windowAny.solana === 'object' &&\n                    (('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function') ||\n                        ('signMessage' in windowAny.solana &&\n                            typeof windowAny.solana.signMessage === 'function'))) {\n                    resolvedWallet = windowAny.solana;\n                }\n                else {\n                    throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n                }\n            }\n            const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n                const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({ issuedAt: new Date().toISOString() }, options === null || options === void 0 ? void 0 : options.signInWithSolana), { \n                    // non-overridable properties\n                    version: '1', domain: url.host, uri: url.href }), (statement ? { statement } : null)));\n                let outputToProcess;\n                if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                    outputToProcess = output[0];\n                }\n                else if (output &&\n                    typeof output === 'object' &&\n                    'signedMessage' in output &&\n                    'signature' in output) {\n                    outputToProcess = output;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n                }\n                if ('signedMessage' in outputToProcess &&\n                    'signature' in outputToProcess &&\n                    (typeof outputToProcess.signedMessage === 'string' ||\n                        outputToProcess.signedMessage instanceof Uint8Array) &&\n                    outputToProcess.signature instanceof Uint8Array) {\n                    message =\n                        typeof outputToProcess.signedMessage === 'string'\n                            ? outputToProcess.signedMessage\n                            : new TextDecoder().decode(outputToProcess.signedMessage);\n                    signature = outputToProcess.signature;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n                }\n            }\n            else {\n                if (!('signMessage' in resolvedWallet) ||\n                    typeof resolvedWallet.signMessage !== 'function' ||\n                    !('publicKey' in resolvedWallet) ||\n                    typeof resolvedWallet !== 'object' ||\n                    !resolvedWallet.publicKey ||\n                    !('toBase58' in resolvedWallet.publicKey) ||\n                    typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                    throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n                }\n                message = [\n                    `${url.host} wants you to sign in with your Solana account:`,\n                    resolvedWallet.publicKey.toBase58(),\n                    ...(statement ? ['', statement, ''] : ['']),\n                    'Version: 1',\n                    `URI: ${url.href}`,\n                    `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`,\n                    ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore)\n                        ? [`Not Before: ${options.signInWithSolana.notBefore}`]\n                        : []),\n                    ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime)\n                        ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`]\n                        : []),\n                    ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId)\n                        ? [`Chain ID: ${options.signInWithSolana.chainId}`]\n                        : []),\n                    ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []),\n                    ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId)\n                        ? [`Request ID: ${options.signInWithSolana.requestId}`]\n                        : []),\n                    ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length)\n                        ? [\n                            'Resources',\n                            ...options.signInWithSolana.resources.map((resource) => `- ${resource}`),\n                        ]\n                        : []),\n                ].join('\\n');\n                const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n                if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                    throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n                }\n                signature = maybeSignature;\n            }\n        }\n        try {\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({ chain: 'solana', message, signature: bytesToBase64URL(signature) }, (((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken } }\n                    : null)),\n                xform: _sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign({}, data), error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _exchangeCodeForSession(authCode) {\n        const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n        try {\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _sessionResponse,\n            });\n            await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null, redirectType: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n        try {\n            const { options, provider, token, access_token, nonce } = credentials;\n            const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                headers: this.headers,\n                body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                },\n                xform: _sessionResponse,\n            });\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        try {\n            if ('email' in credentials) {\n                const { email, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            if ('phone' in credentials) {\n                const { phone, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n        var _a, _b;\n        try {\n            let redirectTo = undefined;\n            let captchaToken = undefined;\n            if ('options' in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),\n                redirectTo,\n                xform: _sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data) {\n                throw new Error('An error occurred on token verification.');\n            }\n            const session = data.session;\n            const user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n        var _a, _b, _c;\n        try {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                ;\n                [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                    : null)), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                headers: this.headers,\n                xform: _ssoResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._reauthenticate();\n        });\n    }\n    async _reauthenticate() {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new AuthSessionMissingError();\n                const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n        try {\n            const endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n                const { email, type, options } = credentials;\n                const { error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            else if ('phone' in credentials) {\n                const { phone, type, options } = credentials;\n                const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return this._useSession(async (result) => {\n                return result;\n            });\n        });\n        return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n        this._debug('#_acquireLock', 'begin', acquireTimeout);\n        try {\n            if (this.lockAcquired) {\n                const last = this.pendingInLock.length\n                    ? this.pendingInLock[this.pendingInLock.length - 1]\n                    : Promise.resolve();\n                const result = (async () => {\n                    await last;\n                    return await fn();\n                })();\n                this.pendingInLock.push((async () => {\n                    try {\n                        await result;\n                    }\n                    catch (e) {\n                        // we just care if it finished\n                    }\n                })());\n                return result;\n            }\n            return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n                this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n                try {\n                    this.lockAcquired = true;\n                    const result = fn();\n                    this.pendingInLock.push((async () => {\n                        try {\n                            await result;\n                        }\n                        catch (e) {\n                            // we just care if it finished\n                        }\n                    })());\n                    await result;\n                    // keep draining the queue until there's nothing to wait on\n                    while (this.pendingInLock.length) {\n                        const waitOn = [...this.pendingInLock];\n                        await Promise.all(waitOn);\n                        this.pendingInLock.splice(0, waitOn.length);\n                    }\n                    return await result;\n                }\n                finally {\n                    this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n                    this.lockAcquired = false;\n                }\n            });\n        }\n        finally {\n            this._debug('#_acquireLock', 'end');\n        }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n        this._debug('#_useSession', 'begin');\n        try {\n            // the use of __loadSession here is the only correct use of the function!\n            const result = await this.__loadSession();\n            return await fn(result);\n        }\n        finally {\n            this._debug('#_useSession', 'end');\n        }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n        this._debug('#__loadSession()', 'begin');\n        if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n        }\n        try {\n            let currentSession = null;\n            const maybeSession = await getItemAsync(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n                if (this._isValidSession(maybeSession)) {\n                    currentSession = maybeSession;\n                }\n                else {\n                    this._debug('#getSession()', 'session from storage is not valid');\n                    await this._removeSession();\n                }\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at * 1000 - Date.now() < EXPIRY_MARGIN_MS\n                : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n                if (this.userStorage) {\n                    const maybeUser = (await getItemAsync(this.userStorage, this.storageKey + '-user'));\n                    if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                        currentSession.user = maybeUser.user;\n                    }\n                    else {\n                        currentSession.user = userNotAvailableProxy();\n                    }\n                }\n                if (this.storage.isServer && currentSession.user) {\n                    let suppressWarning = this.suppressGetSessionWarning;\n                    const proxySession = new Proxy(currentSession, {\n                        get: (target, prop, receiver) => {\n                            if (!suppressWarning && prop === 'user') {\n                                // only show warning when the user object is being accessed from the server\n                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                            }\n                            return Reflect.get(target, prop, receiver);\n                        },\n                    });\n                    currentSession = proxySession;\n                }\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        }\n        finally {\n            this._debug('#__loadSession()', 'end');\n        }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n        if (jwt) {\n            return await this._getUser(jwt);\n        }\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return await this._getUser();\n        });\n        return result;\n    }\n    async _getUser(jwt) {\n        try {\n            if (jwt) {\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            return await this._useSession(async (result) => {\n                var _a, _b, _c;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n                    return { data: { user: null }, error: new AuthSessionMissingError() };\n                }\n                return await _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                    xform: _userResponse,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                if (isAuthSessionMissingError(error)) {\n                    // JWT contains a `session_id` which does not correspond to an active\n                    // session in the database, indicating the user is signed out.\n                    await this._removeSession();\n                    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n                }\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._updateUser(attributes, options);\n        });\n    }\n    async _updateUser(attributes, options = {}) {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce' && attributes.email != null) {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n                }\n                const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._setSession(currentSession);\n        });\n    }\n    async _setSession(currentSession) {\n        try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n                throw new AuthSessionMissingError();\n            }\n            const timeNow = Date.now() / 1000;\n            let expiresAt = timeNow;\n            let hasExpired = true;\n            let session = null;\n            const { payload } = decodeJWT(currentSession.access_token);\n            if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!refreshedSession) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                session = refreshedSession;\n            }\n            else {\n                const { data, error } = await this._getUser(currentSession.access_token);\n                if (error) {\n                    throw error;\n                }\n                session = {\n                    access_token: currentSession.access_token,\n                    refresh_token: currentSession.refresh_token,\n                    user: data.user,\n                    token_type: 'bearer',\n                    expires_in: expiresAt - timeNow,\n                    expires_at: expiresAt,\n                };\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user: session.user, session }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._refreshSession(currentSession);\n        });\n    }\n    async _refreshSession(currentSession) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                if (!currentSession) {\n                    const { data, error } = result;\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n        try {\n            if (!isBrowser())\n                throw new AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n                // The error class returned implies that the redirect is from an implicit grant flow\n                // but it could also be from a redirect error from a PKCE flow.\n                throw new AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                    error: params.error || 'unspecified_error',\n                    code: params.error_code || 'unspecified_code',\n                });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n                case 'implicit':\n                    if (this.flowType === 'pkce') {\n                        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                    }\n                    break;\n                case 'pkce':\n                    if (this.flowType === 'implicit') {\n                        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                    }\n                    break;\n                default:\n                // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n                if (!params.code)\n                    throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n                const { data, error } = await this._exchangeCodeForSession(params.code);\n                if (error)\n                    throw error;\n                const url = new URL(window.location.href);\n                url.searchParams.delete('code');\n                window.history.replaceState(window.history.state, '', url.toString());\n                return { data: { session: data.session, redirectType: null }, error: null };\n            }\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, } = params;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n                throw new AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = parseInt(expires_in);\n            let expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n                expiresAt = parseInt(expires_at);\n            }\n            const actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION_MS) {\n                console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            const issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            }\n            else if (timeNow - issuedAt < 0) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            const { data, error } = await this._getUser(access_token);\n            if (error)\n                throw error;\n            const session = {\n                provider_token,\n                provider_refresh_token,\n                access_token,\n                expires_in: expiresIn,\n                expires_at: expiresAt,\n                refresh_token,\n                token_type,\n                user: data.user,\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return { data: { session, redirectType: params.type }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n        const currentStorageContent = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n        return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = { scope: 'global' }) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._signOut(options);\n        });\n    }\n    async _signOut({ scope } = { scope: 'global' }) {\n        return await this._useSession(async (result) => {\n            var _a;\n            const { data, error: sessionError } = result;\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = await this.admin.signOut(accessToken, scope);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) &&\n                        (error.status === 404 || error.status === 401 || error.status === 403))) {\n                        return { error };\n                    }\n                }\n            }\n            if (scope !== 'others') {\n                await this._removeSession();\n                await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this._debug('#unsubscribe()', 'state change callback with id removed', id);\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        (async () => {\n            await this.initializePromise;\n            await this._acquireLock(-1, async () => {\n                this._emitInitialSession(id);\n            });\n        })();\n        return { data: { subscription } };\n    }\n    async _emitInitialSession(id) {\n        return await this._useSession(async (result) => {\n            var _a, _b;\n            try {\n                const { data: { session }, error, } = result;\n                if (error)\n                    throw error;\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n            }\n            catch (err) {\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n        }\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n                body: {\n                    email,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n        var _a;\n        try {\n            const { data, error } = await this.getUser();\n            if (error)\n                throw error;\n            return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */\n    async linkIdentity(credentials) {\n        var _a;\n        try {\n            const { data, error } = await this._useSession(async (result) => {\n                var _a, _b, _c, _d, _e;\n                const { data, error } = result;\n                if (error)\n                    throw error;\n                const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true,\n                });\n                return await _request(this.fetch, 'GET', url, {\n                    headers: this.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined,\n                });\n            });\n            if (error)\n                throw error;\n            if (isBrowser() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { provider: credentials.provider, url: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n                    headers: this.headers,\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n        const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            const startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return await retryable(async (attempt) => {\n                if (attempt > 0) {\n                    await sleep(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                this._debug(debugName, 'refreshing attempt', attempt);\n                return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                    body: { refresh_token: refreshToken },\n                    headers: this.headers,\n                    xform: _sessionResponse,\n                });\n            }, (attempt, error) => {\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\n                return (error &&\n                    isAuthRetryableFetchError(error) &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION_MS);\n            });\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n        const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n        // try to open on the browser\n        if (isBrowser() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n        }\n        return { data: { provider, url }, error: null };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n        var _a, _b;\n        const debugName = '#_recoverAndRefresh()';\n        this._debug(debugName, 'begin');\n        try {\n            const currentSession = (await getItemAsync(this.storage, this.storageKey));\n            if (currentSession && this.userStorage) {\n                let maybeUser = (await getItemAsync(this.userStorage, this.storageKey + '-user'));\n                if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                    // storage and userStorage are the same storage medium, for example\n                    // window.localStorage if userStorage does not have the user from\n                    // storage stored, store it first thereby migrating the user object\n                    // from storage -> userStorage\n                    maybeUser = { user: currentSession.user };\n                    await setItemAsync(this.userStorage, this.storageKey + '-user', maybeUser);\n                }\n                currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : userNotAvailableProxy();\n            }\n            else if (currentSession && !currentSession.user) {\n                // user storage is not set, let's check if it was previously enabled so\n                // we bring back the storage as it should be\n                if (!currentSession.user) {\n                    // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                    const separateUser = (await getItemAsync(this.storage, this.storageKey + '-user'));\n                    if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                        currentSession.user = separateUser.user;\n                        await removeItemAsync(this.storage, this.storageKey + '-user');\n                        await setItemAsync(this.storage, this.storageKey, currentSession);\n                    }\n                    else {\n                        currentSession.user = userNotAvailableProxy();\n                    }\n                }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n                this._debug(debugName, 'session is not valid');\n                if (currentSession !== null) {\n                    await this._removeSession();\n                }\n                return;\n            }\n            const expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n                if (this.autoRefreshToken && currentSession.refresh_token) {\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        console.error(error);\n                        if (!isAuthRetryableFetchError(error)) {\n                            this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                            await this._removeSession();\n                        }\n                    }\n                }\n            }\n            else if (currentSession.user &&\n                currentSession.user.__isUserNotAvailableProxy === true) {\n                // If we have a proxy user, try to get the real user data\n                try {\n                    const { data, error: userError } = await this._getUser(currentSession.access_token);\n                    if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                        currentSession.user = data.user;\n                        await this._saveSession(currentSession);\n                        await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                    }\n                    else {\n                        this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                    }\n                }\n                catch (getUserError) {\n                    console.error('Error getting user data:', getUserError);\n                    this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n                }\n            }\n            else {\n                // no need to persist currentSession again, as we just loaded it from\n                // local storage; persisting it again may overwrite a value saved by\n                // another client with access to the same local storage\n                await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n        }\n        catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    async _callRefreshToken(refreshToken) {\n        var _a, _b;\n        if (!refreshToken) {\n            throw new AuthSessionMissingError();\n        }\n        // refreshing is already in progress\n        if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n        }\n        const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            this.refreshingDeferred = new Deferred();\n            const { data, error } = await this._refreshAccessToken(refreshToken);\n            if (error)\n                throw error;\n            if (!data.session)\n                throw new AuthSessionMissingError();\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            const result = { session: data.session, error: null };\n            this.refreshingDeferred.resolve(result);\n            return result;\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if (isAuthError(error)) {\n                const result = { session: null, error };\n                if (!isAuthRetryableFetchError(error)) {\n                    await this._removeSession();\n                }\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                return result;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n        }\n        finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n        }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n        const debugName = `#_notifyAllSubscribers(${event})`;\n        this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n        try {\n            if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({ event, session });\n            }\n            const errors = [];\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n                try {\n                    await x.callback(event, session);\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            });\n            await Promise.all(promises);\n            if (errors.length > 0) {\n                for (let i = 0; i < errors.length; i += 1) {\n                    console.error(errors[i]);\n                }\n                throw errors[0];\n            }\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n        this._debug('#_saveSession()', session);\n        // _saveSession is always called whenever a new session has been acquired\n        // so we can safely suppress the warning returned by future getSession calls\n        this.suppressGetSessionWarning = true;\n        // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n        const sessionToProcess = Object.assign({}, session);\n        const userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n        if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n                // If it's a real user object, save it to userStorage.\n                await setItemAsync(this.userStorage, this.storageKey + '-user', {\n                    user: sessionToProcess.user,\n                });\n            }\n            else if (userIsProxy) {\n                // If it's the proxy, it means user was not found in userStorage.\n                // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n                // or simply not save the proxy. For now, we don't save the proxy here.\n                // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            const mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            const clonedMainSessionData = deepClone(mainSessionData);\n            await setItemAsync(this.storage, this.storageKey, clonedMainSessionData);\n        }\n        else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            const clonedSession = deepClone(sessionToProcess); // sessionToProcess still has its original user property\n            await setItemAsync(this.storage, this.storageKey, clonedSession);\n        }\n    }\n    async _removeSession() {\n        this._debug('#_removeSession()');\n        await removeItemAsync(this.storage, this.storageKey);\n        await removeItemAsync(this.storage, this.storageKey + '-code-verifier');\n        await removeItemAsync(this.storage, this.storageKey + '-user');\n        if (this.userStorage) {\n            await removeItemAsync(this.userStorage, this.storageKey + '-user');\n        }\n        await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n        await this._stopAutoRefresh();\n        this._debug('#_startAutoRefresh()');\n        const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION_MS);\n        this.autoRefreshTicker = ticker;\n        if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n        }\n        else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n        }\n        // run the tick immediately, but in the next pass of the event loop so that\n        // #_initialize can be allowed to complete without recursively waiting on\n        // itself\n        setTimeout(async () => {\n            await this.initializePromise;\n            await this._autoRefreshTokenTick();\n        }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n        this._debug('#_stopAutoRefresh()');\n        const ticker = this.autoRefreshTicker;\n        this.autoRefreshTicker = null;\n        if (ticker) {\n            clearInterval(ticker);\n        }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n        this._debug('#_autoRefreshTokenTick()', 'begin');\n        try {\n            await this._acquireLock(0, async () => {\n                try {\n                    const now = Date.now();\n                    try {\n                        return await this._useSession(async (result) => {\n                            const { data: { session }, } = result;\n                            if (!session || !session.refresh_token || !session.expires_at) {\n                                this._debug('#_autoRefreshTokenTick()', 'no session');\n                                return;\n                            }\n                            // session will expire in this many ticks (or has already expired if <= 0)\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION_MS);\n                            this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                            if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                                await this._callRefreshToken(session.refresh_token);\n                            }\n                        });\n                    }\n                    catch (e) {\n                        console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                    }\n                }\n                finally {\n                    this._debug('#_autoRefreshTokenTick()', 'end');\n                }\n            });\n        }\n        catch (e) {\n            if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n                this._debug('auto refresh token tick lock not available');\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n        this._debug('#_handleVisibilityChange()');\n        if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n            }\n            return false;\n        }\n        try {\n            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            await this._onVisibilityChanged(true); // initial call\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n        const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n        this._debug(methodName, 'visibilityState', document.visibilityState);\n        if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n                // in browser environments the refresh token ticker runs only on focused tabs\n                // which prevents race conditions\n                this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n                // called when the visibility has changed, i.e. the browser\n                // transitioned from hidden -> visible so we need to see if the session\n                // should be recovered immediately... but to do that we need to acquire\n                // the lock first asynchronously\n                await this.initializePromise;\n                await this._acquireLock(-1, async () => {\n                    if (document.visibilityState !== 'visible') {\n                        this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                        // visibility has changed while waiting for the lock, abort\n                        return;\n                    }\n                    // recover the session\n                    await this._recoverAndRefresh();\n                });\n            }\n        }\n        else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n                this._stopAutoRefresh();\n            }\n        }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (this.flowType === 'pkce') {\n            const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);\n            const flowParams = new URLSearchParams({\n                code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n            });\n            urlParams.push(flowParams.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n        }\n        return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _enroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const body = Object.assign({ friendly_name: params.friendlyName, factor_type: params.factorType }, (params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }));\n                const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body,\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    async _verify(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                        body: { code: params.code, challenge_id: params.challengeId },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                    if (error) {\n                        return { data: null, error };\n                    }\n                    await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                    await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                    return { data, error };\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    async _challenge(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    return await _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                        body: { channel: params.channel },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n        // both _challenge and _verify independently acquire the lock, so no need\n        // to acquire it here\n        const { data: challengeData, error: challengeError } = await this._challenge({\n            factorId: params.factorId,\n        });\n        if (challengeError) {\n            return { data: null, error: challengeError };\n        }\n        return await this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code,\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n        // use #getUser instead of #_getUser as the former acquires a lock\n        const { data: { user }, error: userError, } = await this.getUser();\n        if (userError) {\n            return { data: null, error: userError };\n        }\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n        const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n        const phone = factors.filter((factor) => factor.factor_type === 'phone' && factor.status === 'verified');\n        return {\n            data: {\n                all: factors,\n                totp,\n                phone,\n            },\n            error: null,\n        };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n        return this._acquireLock(-1, async () => {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                if (!session) {\n                    return {\n                        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                        error: null,\n                    };\n                }\n                const { payload } = decodeJWT(session.access_token);\n                let currentLevel = null;\n                if (payload.aal) {\n                    currentLevel = payload.aal;\n                }\n                let nextLevel = currentLevel;\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                    nextLevel = 'aal2';\n                }\n                const currentAuthenticationMethods = payload.amr || [];\n                return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n            });\n        });\n    }\n    async fetchJwk(kid, jwks = { keys: [] }) {\n        // try fetching from the supplied jwks\n        let jwk = jwks.keys.find((key) => key.kid === kid);\n        if (jwk) {\n            return jwk;\n        }\n        const now = Date.now();\n        // try fetching from cache\n        jwk = this.jwks.keys.find((key) => key.kid === kid);\n        // jwk exists and jwks isn't stale\n        if (jwk && this.jwks_cached_at + JWKS_TTL > now) {\n            return jwk;\n        }\n        // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n        const { data, error } = await _request(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n            headers: this.headers,\n        });\n        if (error) {\n            throw error;\n        }\n        if (!data.keys || data.keys.length === 0) {\n            return null;\n        }\n        this.jwks = data;\n        this.jwks_cached_at = now;\n        // Find the signing key\n        jwk = data.keys.find((key) => key.kid === kid);\n        if (!jwk) {\n            return null;\n        }\n        return jwk;\n    }\n    /**\n     * Extracts the JWT claims present in the access token by first verifying the\n     * JWT against the server's JSON Web Key Set endpoint\n     * `/.well-known/jwks.json` which is often cached, resulting in significantly\n     * faster responses. Prefer this method over {@link #getUser} which always\n     * sends a request to the Auth server for each JWT.\n     *\n     * If the project is not using an asymmetric JWT signing key (like ECC or\n     * RSA) it always sends a request to the Auth server (similar to {@link\n     * #getUser}) to verify the JWT.\n     *\n     * @param jwt An optional specific JWT you wish to verify, not the one you\n     *            can obtain from {@link #getSession}.\n     * @param options Various additional options that allow you to customize the\n     *                behavior of this method.\n     */\n    async getClaims(jwt, options = {}) {\n        try {\n            let token = jwt;\n            if (!token) {\n                const { data, error } = await this.getSession();\n                if (error || !data.session) {\n                    return { data: null, error };\n                }\n                token = data.session.access_token;\n            }\n            const { header, payload, signature, raw: { header: rawHeader, payload: rawPayload }, } = decodeJWT(token);\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n                // Reject expired JWTs should only happen if jwt argument was passed\n                validateExp(payload.exp);\n            }\n            const signingKey = !header.alg ||\n                header.alg.startsWith('HS') ||\n                !header.kid ||\n                !('crypto' in globalThis && 'subtle' in globalThis.crypto)\n                ? null\n                : await this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? { keys: options.keys } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n                const { error } = await this.getUser(token);\n                if (error) {\n                    throw error;\n                }\n                // getUser succeeds so the claims in the JWT can be trusted\n                return {\n                    data: {\n                        claims: payload,\n                        header,\n                        signature,\n                    },\n                    error: null,\n                };\n            }\n            const algorithm = getAlgorithm(header.alg);\n            // Convert JWK to CryptoKey\n            const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, [\n                'verify',\n            ]);\n            // Verify the signature\n            const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, stringToUint8Array(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n                throw new AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n                data: {\n                    claims: payload,\n                    header,\n                    signature,\n                },\n                error: null,\n            };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\nGoTrueClient.nextInstanceID = 0;\n//# sourceMappingURL=GoTrueClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/auth-js';\nexport { PostgrestError, } from '@supabase/postgrest-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, FunctionRegion, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n// Check for Node.js <= 18 deprecation\nfunction shouldShowDeprecationWarning() {\n    // Skip in browser environments\n    if (typeof window !== 'undefined') {\n        return false;\n    }\n    // Skip if process is not available (e.g., Edge Runtime)\n    if (typeof process === 'undefined') {\n        return false;\n    }\n    // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n    const processVersion = process['version'];\n    if (processVersion === undefined || processVersion === null) {\n        return false;\n    }\n    const versionMatch = processVersion.match(/^v(\\d+)\\./);\n    if (!versionMatch) {\n        return false;\n    }\n    const majorVersion = parseInt(versionMatch[1], 10);\n    return majorVersion <= 18;\n}\nif (shouldShowDeprecationWarning()) {\n    console.warn(`⚠️  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. ` +\n        `Please upgrade to Node.js 20 or later. ` +\n        `For more information, visit: https://github.com/orgs/supabase/discussions/37217`);\n}\n//# sourceMappingURL=index.js.map","// =====================================\n// STEP 1: Re-export all types from the GENERATED file for the rest of the app\n// =====================================\nexport * from './database.types';\n\n// =====================================\n// STEP 2: Import necessary dependencies\n// =====================================\nimport { createClient } from '@supabase/supabase-js';\n\n// Import the main Database type from the GENERATED file\nimport type { Database } from './database.types';\n\n// =====================================\n// STEP 3: ALL MANUAL DATABASE TYPES HAVE BEEN REMOVED\n// The Database interface and all table types are now imported from database.types.ts\n// =====================================\n\n// =====================================\n// UTILITY TYPE DEFINITIONS (These remain as they are not schema-specific)\n// =====================================\n\nexport interface ConnectionTestResult {\n  connected: boolean;\n  tunnel_active?: boolean;\n  response_time_ms?: number;\n  error?: string;\n  database_info?: {\n    url: string;\n    schema: string;\n    tunnel_domain?: string;\n  };\n}\n\nexport interface AuditEventOptions {\n  userId?: string | null;\n  resourceType?: string;\n  resourceId?: string;\n  ipAddress?: string;\n  userAgent?: string;\n  errorMessage?: string;\n  success?: boolean;\n}\n\nexport interface SubscriptionOptions {\n  onError?: (error: any) => void;\n  onConnect?: () => void;\n  onDisconnect?: () => void;\n}\n\nexport interface RealtimeSubscription {\n  unsubscribe: () => void;\n}\n\n// =====================================\n// SUPABASE CLIENT CONFIGURATION\n// =====================================\n\n// Environment variable validation\nconst supabaseUrl = \n  import.meta.env.VITE_SUPABASE_URL || \n  import.meta.env.VITE_SUPABASE_TUNNEL_URL || \n  import.meta.env.VITE_SUPABASE_DIRECT_URL;\n\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\n// Validate required environment variables\nif (!supabaseUrl || !supabaseAnonKey) {\n  const missingVars = [];\n  if (!supabaseUrl) missingVars.push('VITE_SUPABASE_URL');\n  if (!supabaseAnonKey) missingVars.push('VITE_SUPABASE_ANON_KEY');\n  \n  console.error('❌ Missing Supabase environment variables:', missingVars);\n  throw new Error(`Missing required Supabase environment variables: ${missingVars.join(', ')}`);\n}\n\n// =====================================\n// STEP 4: Create typed Supabase client using the imported Database type\n// =====================================\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    storage: window.localStorage,\n    storageKey: 'instagram-automation-auth',\n    flowType: 'pkce',\n    debug: import.meta.env.VITE_ENVIRONMENT === 'development'\n  },\n  db: {\n    schema: 'public'\n  },\n  realtime: {\n    params: {\n      eventsPerSecond: 10,\n    },\n  },\n  global: {\n    headers: {\n      'X-Client-Info': 'instagram-automation-dashboard',\n      'X-Client-Version': '1.0.0',\n      'X-Client-Platform': 'web-frontend'\n    }\n  }\n});\n\n// =====================================\n// CONNECTION TESTING\n// =====================================\n\nexport const testSupabaseConnection = async (): Promise<ConnectionTestResult> => {\n  const startTime = Date.now();\n  \n  try {\n    console.log('🔍 Testing frontend Supabase connection...');\n    \n    const { error } = await supabase\n      .from('user_profiles')\n      .select('*', { count: 'exact', head: true });\n    \n    if (error) {\n      console.error('❌ Supabase connection error:', error);\n      return { \n        connected: false, \n        error: error.message,\n        response_time_ms: Date.now() - startTime\n      };\n    }\n    \n    const responseTime = Date.now() - startTime;\n    const tunnelActive = supabaseUrl.includes('db-secure') || supabaseUrl.includes('tunnel');\n    \n    console.log('✅ Frontend Supabase connected successfully');\n    \n    return {\n      connected: true,\n      tunnel_active: tunnelActive,\n      response_time_ms: responseTime,\n      database_info: {\n        url: supabaseUrl,\n        schema: 'public',\n        tunnel_domain: tunnelActive ? 'db-secure.888intelligenceautomation.in' : undefined\n      }\n    };\n    \n  } catch (err: any) {\n    console.error('❌ Connection test failed:', err);\n    return { \n      connected: false, \n      error: err.message,\n      response_time_ms: Date.now() - startTime\n    };\n  }\n};\n\n// =====================================\n// AUDIT LOGGING\n// =====================================\n\nexport const logAuditEvent = async (\n  eventType: string,\n  action: string,\n  details?: any,\n  options: AuditEventOptions = {}\n): Promise<void> => {\n  try {\n    const auditEntry = {\n      user_id: options.userId || null,\n      event_type: eventType,\n      action: action,\n      resource_type: options.resourceType || null,\n      resource_id: options.resourceId || null,\n      details: details || {},\n      ip_address: options.ipAddress || 'web-client',\n      user_agent: options.userAgent || (typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown'),\n      success: options.success !== false,\n      error_message: options.errorMessage || null\n    };\n    \n    const { error } = await supabase\n      .from('audit_log')\n      .insert([auditEntry]);\n    \n    if (error) {\n      console.error('Audit log error:', error);\n    }\n    \n  } catch (err) {\n    console.error('Failed to log audit event:', err);\n  }\n};\n\n// =====================================\n// SESSION MANAGEMENT\n// =====================================\n\nexport const getCurrentUser = async () => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) throw error;\n    return user;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n};\n\nexport const getCurrentSession = async () => {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession();\n    if (error) throw error;\n    return session;\n  } catch (error) {\n    console.error('Error getting current session:', error);\n    return null;\n  }\n};\n\nexport const getUserProfile = async (userId: string) => {\n  try {\n    const { data, error } = await supabase\n      .from('user_profiles')\n      .select('*')\n      .eq('user_id', userId)\n      .single();\n    \n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error getting user profile:', error);\n    return null;\n  }\n};\n\n// =====================================\n// REAL-TIME SUBSCRIPTIONS\n// =====================================\n\nexport const subscribeToTable = <T extends keyof Database['public']['Tables']>(\n  table: T,\n  callback: (payload: any) => void,\n  filter?: string,\n  options: SubscriptionOptions = {}\n): RealtimeSubscription => {\n  const channelName = `${table}-changes-${Date.now()}`;\n  \n  const channel = supabase\n    .channel(channelName)\n    .on(\n      'postgres_changes',\n      {\n        event: '*',\n        schema: 'public',\n        table: table as string,\n        filter: filter\n      },\n      (payload) => {\n        try {\n          callback(payload);\n        } catch (error) {\n          console.error(`Subscription callback error for ${table}:`, error);\n          options.onError?.(error);\n        }\n      }\n    )\n    .subscribe((status) => {\n      switch (status) {\n        case 'SUBSCRIBED':\n          console.log(`📡 Subscribed to ${table} changes`);\n          options.onConnect?.();\n          break;\n        case 'CHANNEL_ERROR':\n          console.error(`❌ Subscription error for ${table}`);\n          options.onError?.(new Error(`Subscription failed for ${table}`));\n          break;\n        case 'CLOSED':\n          console.log(`🔌 Subscription to ${table} closed`);\n          options.onDisconnect?.();\n          break;\n      }\n    });\n  \n  return {\n    unsubscribe: () => {\n      supabase.removeChannel(channel);\n    }\n  };\n};\n\nexport const subscribeToUserWorkflows = (\n  userId: string,\n  callback: (payload: any) => void\n): RealtimeSubscription => {\n  return subscribeToTable(\n    'automation_workflows',\n    callback,\n    `user_id=eq.${userId}`\n  );\n};\n\nexport const subscribeToWorkflowExecutions = (\n  workflowId: string,\n  callback: (payload: any) => void\n): RealtimeSubscription => {\n  return subscribeToTable(\n    'workflow_executions',\n    callback,\n    `workflow_id=eq.${workflowId}`\n  );\n};\n\n// =====================================\n// UTILITY FUNCTIONS\n// =====================================\n\nexport const checkUserRole = async (userId: string, requiredRole: string): Promise<boolean> => {\n  try {\n    const profile = await getUserProfile(userId);\n    \n    if (!profile || !profile.user_role) return false;\n    \n    const roleHierarchy: Record<string, number> = { \n      user: 1, \n      admin: 2, \n      super_admin: 3 \n    };\n    \n    return roleHierarchy[profile.user_role] >= roleHierarchy[requiredRole];\n  } catch (error) {\n    console.error('Error checking user role:', error);\n    return false;\n  }\n};\n\nexport const isUserAdmin = async (userId: string): Promise<boolean> => {\n  return checkUserRole(userId, 'admin');\n};\n\nexport const isUserSuperAdmin = async (userId: string): Promise<boolean> => {\n  return checkUserRole(userId, 'super_admin');\n};\n\n// API request logging utility\nexport const logApiRequest = async (\n  endpoint: string,\n  method: string,\n  responseTimeMs: number,\n  statusCode: number,\n  success: boolean,\n  errorMessage?: string\n): Promise<void> => {\n  try {\n    const user = await getCurrentUser();\n    if (!user) return;\n    \n    const apiUsageEntry = {\n      user_id: user.id,\n      endpoint,\n      method,\n      response_time_ms: responseTimeMs,\n      status_code: statusCode,\n      success,\n      error_message: errorMessage,\n      hour_bucket: new Date().toISOString().slice(0, 13) + ':00:00',\n      request_count: 1,\n      credits_consumed: 1\n    };\n    \n    await supabase\n      .from('api_usage')\n      .upsert([apiUsageEntry], {\n        onConflict: 'user_id,business_account_id,endpoint,method,hour_bucket',\n        ignoreDuplicates: false\n      });\n  } catch (error) {\n    console.error('Failed to log API request:', error);\n  }\n};\n\n// =====================================\n// TYPE GUARD UTILITIES (Using generated types)\n// =====================================\n\nexport const isUserProfile = (data: any): data is Database['public']['Tables']['user_profiles']['Row'] => {\n  return data && typeof data.user_id === 'string' && 'user_role' in data;\n};\n\nexport const isAdminUser = (data: any): data is Database['public']['Tables']['admin_users']['Row'] => {\n  return data && typeof data.email === 'string' && 'role' in data;\n};\n\nexport const isWorkflow = (data: any): data is Database['public']['Tables']['automation_workflows']['Row'] => {\n  return data && typeof data.automation_type === 'string' && 'status' in data;\n};\n\n// =====================================\n// EXPORTS\n// =====================================\n\nexport default supabase;\n\n// Alias export for compatibility\nexport {\n   supabase as client\n}"],"file":"assets/index-BeeeydF7.js"}